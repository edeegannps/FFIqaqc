% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AKR_datacleaningfunctions.R,
%   R/datacleaningfunctions_AKR.R
\name{tree_fract_qc}
\alias{tree_fract_qc}
\title{Tree fraction}
\usage{
tree_fract_qc(tree)

tree_fract_qc(tree)
}
\arguments{
\item{tree}{}
}
\value{
A list of flags or data issues with fraction in the tree csv

A list of flags or data issues with fraction in the tree csv
}
\description{
The `tree_fract_qc` function conducts quality control checks on subplot fractions for different tree categories based on Diameter at Breast Height (DBH). It classifies trees into `pole` (DBH < 15.1), `overstory` (DBH ≥ 15.1), and `blank` (missing or blank DBH). For overstory trees, the function ensures that all have a subplot fraction (`SubFrac`) of 1. For pole trees, it verifies a subplot fraction of 0.5. For trees with blank or missing DBH, the function checks for a subplot fraction of 1000 or blank. The results are stored in the `flags` variable, containing details about events where subplot fractions deviate from the specified criteria, and are returned by the function.

The `tree_fract_qc` function conducts quality control checks on subplot fractions for different tree categories based on Diameter at Breast Height (DBH). It classifies trees into `pole` (DBH < 15.1), `overstory` (DBH ≥ 15.1), and `blank` (missing or blank DBH). For overstory trees, the function ensures that all have a subplot fraction (`SubFrac`) of 1. For pole trees, it verifies a subplot fraction of 0.5. For trees with blank or missing DBH, the function checks for a subplot fraction of 1000 or blank. The results are stored in the `flags` variable, containing details about events where subplot fractions deviate from the specified criteria, and are returned by the function.
}
\examples{
tree_fract_qc(tree)
tree_fract_qc(tree)
}
